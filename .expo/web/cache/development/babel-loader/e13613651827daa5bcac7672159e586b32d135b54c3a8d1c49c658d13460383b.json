{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TIME_IN_MS_INTRO = 2000;\nvar ANIMATION_DURATION_MS = 1000;\nvar SplashScreen = function SplashScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isWaiting = _useState2[0],\n    setIsWaiting = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loggedIn = _useState4[0],\n    setLoggedIn = _useState4[1];\n  var navigation = useNavigation();\n  var _useState5 = useState([\"#3096E5\", \"#3096E5\"]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    colors = _useState6[0],\n    setColors = _useState6[1];\n  var animatedSpin = new Animated.Value(0);\n  var spin = animatedSpin.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 1.1]\n  });\n  var spin2 = animatedSpin.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.8, 1]\n  });\n  var animateClokwise = Animated.timing(animatedSpin, {\n    toValue: 1,\n    duration: ANIMATION_DURATION_MS,\n    useNativeDriver: true\n  });\n  var animateCounterClockwise = Animated.timing(animatedSpin, {\n    toValue: 0,\n    duration: ANIMATION_DURATION_MS,\n    useNativeDriver: true\n  });\n  var sequence = Animated.sequence([animateClokwise, animateCounterClockwise]);\n  Animated.loop(sequence).start();\n  var randomBackgroundColor = useMemo(function () {\n    var index = Math.floor(Math.random() * colors.length);\n    return colors[index];\n  }, []);\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      setIsWaiting(false);\n    }, TIME_IN_MS_INTRO);\n    return function () {\n      clearTimeout(timeoutId);\n    };\n  }, []);\n  useEffect(function () {\n    if (isWaiting) {\n      return;\n    }\n    if (loggedIn) {\n      navigation.navigate(\"Main\", {});\n    } else {\n      navigation.navigate(\"Login\", {});\n    }\n  }, [loggedIn, isWaiting]);\n  return _jsx(SafeAreaView, {\n    style: [styles.background, {\n      backgroundColor: randomBackgroundColor\n    }],\n    children: _jsxs(Animated.View, {\n      style: {\n        transform: [{\n          scale: spin\n        }],\n        opacity: spin2\n      },\n      children: [_jsx(ImageBackground, {\n        style: styles.image,\n        source: require(\"../assets/LogoApp.png\")\n      }), !loggedIn ? _jsx(Button, {\n        title: \"Realiza el login aqu\\xED\",\n        onPress: function onPress() {\n          navigation.navigate(\"Login\", {});\n        }\n      }) : _jsx(Button, {\n        title: \"Ingresa aqu\\xED\",\n        onPress: function onPress() {\n          navigation.navigate(\"Main\", {});\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  background: {\n    display: \"flex\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  image: {\n    width: 250,\n    height: 200,\n    marginBottom: 30\n  }\n});\nexport default SplashScreen;","map":{"version":3,"names":["SafeAreaView","useEffect","useMemo","useState","useNavigation","jsx","_jsx","jsxs","_jsxs","TIME_IN_MS_INTRO","ANIMATION_DURATION_MS","SplashScreen","_useState","_useState2","_slicedToArray","isWaiting","setIsWaiting","_useState3","_useState4","loggedIn","setLoggedIn","navigation","_useState5","_useState6","colors","setColors","animatedSpin","Animated","Value","spin","interpolate","inputRange","outputRange","spin2","animateClokwise","timing","toValue","duration","useNativeDriver","animateCounterClockwise","sequence","loop","start","randomBackgroundColor","index","Math","floor","random","length","timeoutId","setTimeout","clearTimeout","navigate","style","styles","background","backgroundColor","children","View","transform","scale","opacity","ImageBackground","image","source","require","Button","title","onPress","StyleSheet","create","display","flex","justifyContent","alignItems","width","height","marginBottom"],"sources":["C:/Users/PC-03/Desktop/React_Native/ClassNet-School-App/components/SplashScreen.jsx"],"sourcesContent":["import { ImageBackground, StyleSheet, Button, Animated } from 'react-native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst TIME_IN_MS_INTRO = 2000;\r\nconst ANIMATION_DURATION_MS = 1000;\r\n\r\nconst SplashScreen = () => {\r\n  const [isWaiting, setIsWaiting] = useState(true)\r\n  const [loggedIn, setLoggedIn] = useState(false)\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const [colors, setColors] = useState([\"#3096E5\", \"#3096E5\"])\r\n\r\n  const animatedSpin = new Animated.Value(0);\r\n\r\n  const spin = animatedSpin.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [1, 1.1]\r\n  })\r\n\r\n  const spin2 = animatedSpin.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0.8, 1]\r\n  })\r\n\r\n  const animateClokwise = Animated.timing(animatedSpin, {\r\n    toValue: 1,\r\n    duration: ANIMATION_DURATION_MS,\r\n    useNativeDriver: true,\r\n  })\r\n\r\n  const animateCounterClockwise = Animated.timing(animatedSpin, {\r\n    toValue: 0,\r\n    duration: ANIMATION_DURATION_MS,\r\n    useNativeDriver: true,\r\n  })\r\n\r\n  const sequence = Animated.sequence([animateClokwise, animateCounterClockwise]);\r\n\r\n  Animated.loop(sequence).start();\r\n\r\n  const randomBackgroundColor = useMemo(() => {\r\n    const index = Math.floor(Math.random() * colors.length);\r\n    return colors[index];\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setIsWaiting(false);\r\n    }, TIME_IN_MS_INTRO)\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isWaiting) {\r\n      return\r\n    }\r\n\r\n    if(loggedIn) {\r\n      navigation.navigate(\"Main\", {})\r\n    } else {\r\n      navigation.navigate(\"Login\", {})\r\n    }\r\n  }, [loggedIn, isWaiting])\r\n\r\n  return (\r\n    <SafeAreaView style={[styles.background, {backgroundColor: randomBackgroundColor}]}>\r\n      <Animated.View style={{ transform: [{scale: spin}], opacity: spin2 }}>\r\n        <ImageBackground style={styles.image} source={require(\"../assets/LogoApp.png\")}/>\r\n        {!loggedIn ? <Button title=\"Realiza el login aquí\" onPress={() => {navigation.navigate(\"Login\", {})}}/> : <Button title=\"Ingresa aquí\" onPress={() => {navigation.navigate(\"Main\", {})}}/>}\r\n      </Animated.View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n  background: {\r\n    display: \"flex\", \r\n    flex: 1, \r\n    justifyContent: \"center\", \r\n    alignItems: \"center\", \r\n  }, image: {\r\n    width: 250, \r\n    height: 200,\r\n    marginBottom: 30\r\n  }\r\n})\r\n\r\nexport default SplashScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}